@using SemanticKernelAgentOrchestration.Models
@using SkPluginLibrary.Agents.Models
<RadzenRow>
    <RadzenColumn Size="6">
        <RadzenCard>
            <RadzenText Text="Create Agent" TextStyle="TextStyle.Subtitle1" TextAlign="TextAlign.Center"></RadzenText>
            <RadzenTemplateForm Data="_agentForm" TItem="AgentForm" Submit="GenerateAgent">
                <RadzenFormField Text="Name" Style="width:100%">
                    <ChildContent>
                        <RadzenTextBox Name="Name" Style="width:100%" @bind-Value="_agentForm.Name"></RadzenTextBox>
                    </ChildContent>
                    <Helper>
                        <RadzenRequiredValidator Component="Name"></RadzenRequiredValidator>
                    </Helper>
                </RadzenFormField>
                <RadzenLabel>
                    <RadzenCheckBox Value="_agentForm.IsUserProxy" TValue="bool" ValueChanged="ConfirmUserProxy"></RadzenCheckBox> Assign as User Proxy (You)
                </RadzenLabel>
                <RadzenFormField Text="Description" Style="width:100%">
                    <ChildContent>
                        <RadzenTextArea Style="width:100%;height:4rem;" @bind-Value="_agentForm.Description"></RadzenTextArea>
                    </ChildContent>
                    <Helper></Helper>
                </RadzenFormField>
                <RadzenFormField Text="Instructions" Style="width:100%">
                    <ChildContent>
                        <RadzenTextArea Style="width:100%;height:9rem;" @bind-Value="_agentForm.Instructions"></RadzenTextArea>
                    </ChildContent>
                    <Helper>
                        <RadzenText TextStyle="TextStyle.Caption" Text="Add instructions for agent, similar to a 'System' prompt"></RadzenText>
                    </Helper>
                </RadzenFormField>
               
                <RadzenFormField Text="Required Model">
                    <ChildContent>
                        <RadzenDropDown Data="@_models" AllowClear="true" @bind-Value="@_agentForm.Model" Style="width:100%"></RadzenDropDown>
                    </ChildContent>
                    <Helper>
                        <RadzenText TextStyle="TextStyle.Caption" Text="Select the model to use for the agent"></RadzenText>
                    </Helper>
                </RadzenFormField>
                <RadzenFormField Text="Plugins" Style="width:100%">
                    <ChildContent>
                        <RadzenDropDownDataGrid @ref="_pluginGrid" Data="@_allPlugins.AsEnumerable()" Chips="true" AllowFilteringByAllStringColumns="true" AllowSorting="true" PageSize="10" MaxSelectedLabels="3" AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" AllowClear="true" @bind-Value="@_agentForm.Plugins" TextProperty="Name" Multiple="true" Density="Density.Compact">

                            <Columns>
                                <RadzenDropDownDataGridColumn Property="KernelPlugin.Name" Title="Name" Width="30%"></RadzenDropDownDataGridColumn>
                                <RadzenDropDownDataGridColumn Property="@(nameof(PluginData.PluginType))" Title="Type" Width="30%"></RadzenDropDownDataGridColumn>
                                <RadzenDropDownDataGridColumn Width="30%">
                                    <Template Context="plugin">
                                        @{
                                            var kernelPlugin = (plugin as PluginData).KernelPlugin;
                                        }
                                        <RadzenButton Size="ButtonSize.ExtraSmall" Text="Functions" Icon="functions" @onclick:stopPropagation Click="@(() => ShowFunctions(kernelPlugin))"></RadzenButton>
                                    </Template>
                                </RadzenDropDownDataGridColumn>
                            </Columns>
                        </RadzenDropDownDataGrid>
                    </ChildContent>
                    <Helper>
                        <RadzenText TextStyle="TextStyle.Caption" Text="Add plugins as avaialable Agent tools (optional)"></RadzenText>
                    </Helper>
                </RadzenFormField>
                <br />
                <RadzenButton Size="ButtonSize.Small" ButtonType="ButtonType.Submit" Text="Generate Agent"></RadzenButton>
            </RadzenTemplateForm>
        </RadzenCard>

    </RadzenColumn>
    <RadzenColumn Size="6">
        <RadzenCard>
            @if (AgentsGenerated.Count > 0)
            {
                <RadzenDataGrid @ref=_agentGrid Data="AgentsGenerated" TItem="AgentProxy" Density="Density.Compact" AllowSorting=true>
                    <Template Context="agent">
                        <RadzenTabs>
                            <Tabs>
                                <RadzenTabsItem Text="Instructions">
                                    <RadzenCard Style="word-wrap: break-word; overflow-wrap: break-word;
                                                       white-space: normal;
                                                       overflow: hidden;
                                                       width: 100%"> <RadzenText Text="@agent.Instructions" TextStyle="TextStyle.Body2"></RadzenText></RadzenCard>
                                </RadzenTabsItem>
                                <RadzenTabsItem Text="Plugins">
                                    <RadzenDataGrid Data="@agent.Plugins" TItem="KernelPlugin" Density="Density.Compact">
                                        <Columns>
                                            <RadzenDataGridColumn TItem="KernelPlugin" Title="Name" Property="Name" Width="30%"></RadzenDataGridColumn>
                                            <RadzenDataGridColumn TItem="KernelPlugin" Title="Description" Property="Description" Width="70%"></RadzenDataGridColumn>
                                        </Columns>
                                    </RadzenDataGrid>
                                </RadzenTabsItem>
                            </Tabs>
                        </RadzenTabs>

                    </Template>
                    <Columns>
                        <RadzenDataGridColumn TItem="AgentProxy" Title="Name" Property="Name" Width="20%"></RadzenDataGridColumn>
                        <RadzenDataGridColumn TItem="AgentProxy" Title="Description" Property="Description" Width="40%"></RadzenDataGridColumn>
                        <RadzenDataGridColumn TItem="AgentProxy" Width="10%">
                            <Template Context="agent">
                                @if (agent.IsPrimary)
                                {
                                    <RadzenIcon Style="font-size:2rem;font-weight:600" IconStyle=IconStyle.Success Icon="person" MouseEnter="@((e) => TooltipService.Open(e, "Admin Agent"))"></RadzenIcon>
                                }
                                else if (agent.IsUserProxy)
                                {

                                    <RadzenIcon Style="font-size:2rem;font-weight:600" IconStyle=IconStyle.Primary Icon="support_agent" MouseEnter="@((e) => TooltipService.Open(e, "You! (User Proxy)"))"></RadzenIcon>
                                }
                                else
                                {
                                    <RadzenIcon Style="font-size:2rem;font-weight:600" IconStyle="IconStyle.Warning" Icon="groups" MouseEnter="@((e) => TooltipService.Open(e, "Standard Agent"))"></RadzenIcon>
                                }
                            </Template>
                        </RadzenDataGridColumn>
                        <RadzenDataGridColumn TItem="AgentProxy" Title="" Width="10%">
                            <Template Context="agent">
                                <RadzenButton Size="ButtonSize.ExtraSmall" Click="@(() => UpdateAgent(agent))" Icon="edit"></RadzenButton>
                            </Template>
                        </RadzenDataGridColumn>
                        <RadzenDataGridColumn TItem="AgentProxy" Width="10%">
                            <Template Context="agent">
                                <RadzenButton Size="ButtonSize.ExtraSmall" Click="@(() => DeleteAgent(agent))" IconColor="red" Icon="delete"></RadzenButton>
                            </Template>
                        </RadzenDataGridColumn>
                        <RadzenDataGridColumn TItem="AgentProxy" Width="10%">
                            <Template Context="agent">
                                <RadzenButton Size="ButtonSize.ExtraSmall" Click="@(() => MakePrimary(agent))" Text="primary"></RadzenButton>
                            </Template>
                        </RadzenDataGridColumn>
                    </Columns>
                </RadzenDataGrid>
                <br />
                <RadzenTemplateForm Data="_agentGroupForm" TItem="AgentGroupForm" Submit="Finish">
                    <RadzenFormField Text="Transition Type">
                        <RadzenDropDown Data="_transitionTypes" TValue="GroupTransitionType" @bind-Value="_agentGroupForm.GroupTransitionType" ></RadzenDropDown>
                    </RadzenFormField>
                    <RadzenFormField Text="Stop Statement">
                        <RadzenTextBox @bind-Value="@_agentGroupForm.StopStatement"></RadzenTextBox>
                    </RadzenFormField>
                    <RadzenFormField Text="Rounds">
                        <RadzenNumeric @bind-Value="_agentGroupForm.Rounds" Min="5" Max="50"></RadzenNumeric>
                    </RadzenFormField>
                    <br />

                    <RadzenButton Text="Done!" ButtonType="ButtonType.Submit" Size="ButtonSize.Small"></RadzenButton>
                </RadzenTemplateForm>

            }
        </RadzenCard>
        
    </RadzenColumn>
</RadzenRow>