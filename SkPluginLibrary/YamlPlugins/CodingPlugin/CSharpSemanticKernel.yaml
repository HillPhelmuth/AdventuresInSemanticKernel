description: Turns natural language into ready to compile and execute c# code specifically using the Semantic Kernel SDK
execution_settings:
  default:
    max_tokens: 1256
    temperature: 0.0
    top_p: 0.0
    presence_penalty: 0.0
    frequency_penalty: 0.0
input_variables:
- name: input
  description: The code gen instructions
  default: ''
- name: existingCode
  description: The code editor as it currently exists.
  default: ''
- name: sk_memory
  description: semantic kernel specific content
  default: ''
name: CSharpSemanticKernel
template: |
  Given a user instructions and any existing C# code, generate C# code that corresponds to the user's instructions in the form of a console application. The response should consist solely of C# code, without any explanations or markdown formatting. The generated code should be compatible and coherent with any existing C# code provided by the user. Each user instruction should result in a unique piece of code that contributes to the overall functionality of the console application. Use the [Semantic Kernel Examples] as a reference for examples, but do not repeat it. Generate unique code. No prose.



  [Semantic Kernel Examples]


  {{code.RecallCode input=$input collection='skDocsCollection' relevance='0.78' limit='5'}}


  [End Semantic Kernel Examples]



  [user instructions]


  {{$input}}



  [existing code]


  {{$existingCode}}
