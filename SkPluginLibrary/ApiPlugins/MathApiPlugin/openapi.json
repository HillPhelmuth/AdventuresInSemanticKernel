{
  "openapi": "3.0.0",
  "info": {
    "title": "Newton Math Api",
    "description": "Newton does anything from numerical calculation to symbolic math parsing.",
    "version": "0.1"
  },
  "servers": [
    {
      "url": "https://newton.now.sh/api/v2/",
      "description": "production"
    }
  ],
  "paths": {
    "/simplify/{expression}": {
      "get": {
        "summary": "Simplify",
        "operationId": "Simplify",
        "parameters": [
          {
            "name": "expression",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "operation": {
                      "type": "string"
                    },
                    "expression": {
                      "type": "string"
                    },
                    "result": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/factor/{expression}": {
      "get": {
        "summary": "Factor",
        "operationId": "Factor",
        "parameters": [
          {
            "name": "expression",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "operation": {
                      "type": "string"
                    },
                    "expression": {
                      "type": "string"
                    },
                    "result": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/derive/{expression}": {
      "get": {
        "summary": "Derive",
        "operationId": "Derive",
        "parameters": [
          {
            "name": "expression",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "operation": {
                      "type": "string"
                    },
                    "expression": {
                      "type": "string"
                    },
                    "result": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/integrate/{expression}": {
      "get": {
        "summary": "Integrate",
        "operationId": "Integrate",
        "parameters": [
          {
            "name": "expression",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "operation": {
                      "type": "string"
                    },
                    "expression": {
                      "type": "string"
                    },
                    "result": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/zeroes/{expression}": {
      "get": {
        "summary": "Find 0's",
        "operationId": "FindZeroes",
        "parameters": [
          {
            "name": "expression",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "operation": {
                      "type": "string"
                    },
                    "expression": {
                      "type": "string"
                    },
                    "result": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tangent/{expression}": {
      "get": {
        "summary": "Find Tangent",
        "operationId": "FindTangent",
        "parameters": [
          {
            "name": "expression",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "operation": {
                      "type": "string"
                    },
                    "expression": {
                      "type": "string"
                    },
                    "result": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/area/{expression}": {
      "get": {
        "summary": "Area Under Curve",
        "operationId": "AreaUnderCurve",
        "parameters": [
          {
            "name": "expression",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "operation": {
                      "type": "string"
                    },
                    "expression": {
                      "type": "string"
                    },
                    "result": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cos/{expression}": {
      "get": {
        "summary": "Cosine",
        "operationId": "Cosine",
        "parameters": [
          {
            "name": "expression",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "operation": {
                      "type": "string"
                    },
                    "expression": {
                      "type": "string"
                    },
                    "result": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/sin/{expression}": {
      "get": {
        "summary": "Sine",
        "operationId": "Sine",
        "parameters": [
          {
            "name": "expression",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "operation": {
                      "type": "string"
                    },
                    "expression": {
                      "type": "string"
                    },
                    "result": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tan/{expression}": {
      "get": {
        "summary": "Tangent",
        "operationId": "Tangent",
        "parameters": [
          {
            "name": "expression",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "operation": {
                      "type": "string"
                    },
                    "expression": {
                      "type": "string"
                    },
                    "result": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/arccos/{expression}": {
      "get": {
        "summary": "Inverse Cosine",
        "operationId": "InverseCosine",
        "parameters": [
          {
            "name": "expression",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "operation": {
                      "type": "string"
                    },
                    "expression": {
                      "type": "string"
                    },
                    "result": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/arcsin/{expression}": {
      "get": {
        "summary": "Inverse Sine",
        "operationId": "InverseSine",
        "parameters": [
          {
            "name": "expression",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "operation": {
                      "type": "string"
                    },
                    "expression": {
                      "type": "string"
                    },
                    "result": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/arctan/{expression}": {
      "get": {
        "summary": "Inverse Tangent",
        "operationId": "InverseTangent",
        "parameters": [
          {
            "name": "expression",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "operation": {
                      "type": "string"
                    },
                    "expression": {
                      "type": "string"
                    },
                    "result": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/abs/{expression}": {
      "get": {
        "summary": "Absolute Value",
        "operationId": "AbsoluteValue",
        "parameters": [
          {
            "name": "expression",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "operation": {
                      "type": "string"
                    },
                    "expression": {
                      "type": "string"
                    },
                    "result": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/log/{expression}": {
      "get": {
        "summary": "Logarithm",
        "operationId": "Logarithm",
        "parameters": [
          {
            "name": "expression",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "operation": {
                      "type": "string"
                    },
                    "expression": {
                      "type": "string"
                    },
                    "result": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}